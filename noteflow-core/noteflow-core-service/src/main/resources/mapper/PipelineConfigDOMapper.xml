<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zty.noteflow.core.dao.PipelineConfigDOMapper" >
  <resultMap id="BaseResultMap" type="com.zty.noteflow.core.facade.DO.PipelineConfigDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="file_id" property="fileId" jdbcType="INTEGER" />
    <result column="pipeline_type" property="pipelineType" jdbcType="INTEGER" />
    <result column="puller_mask" property="pullerMask" jdbcType="INTEGER" />
    <result column="pusher_mask" property="pusherMask" jdbcType="INTEGER" />
    <result column="config_json" property="configJson" jdbcType="VARCHAR" />
    <result column="disabled" property="disabled" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account_id, file_id, pipeline_type, puller_mask, pusher_mask, config_json, disabled, 
    create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zty.noteflow.core.facade.DO.examples.PipelineConfigDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pipeline_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pipeline_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pipeline_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zty.noteflow.core.facade.DO.examples.PipelineConfigDOExample" >
    delete from pipeline_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zty.noteflow.core.facade.DO.PipelineConfigDO" >
    insert into pipeline_config (id, account_id, file_id, 
      pipeline_type, puller_mask, pusher_mask, 
      config_json, disabled, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{fileId,jdbcType=INTEGER}, 
      #{pipelineType,jdbcType=INTEGER}, #{pullerMask,jdbcType=INTEGER}, #{pusherMask,jdbcType=INTEGER}, 
      #{configJson,jdbcType=VARCHAR}, #{disabled,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zty.noteflow.core.facade.DO.PipelineConfigDO" >
    insert into pipeline_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="fileId != null" >
        file_id,
      </if>
      <if test="pipelineType != null" >
        pipeline_type,
      </if>
      <if test="pullerMask != null" >
        puller_mask,
      </if>
      <if test="pusherMask != null" >
        pusher_mask,
      </if>
      <if test="configJson != null" >
        config_json,
      </if>
      <if test="disabled != null" >
        disabled,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="pipelineType != null" >
        #{pipelineType,jdbcType=INTEGER},
      </if>
      <if test="pullerMask != null" >
        #{pullerMask,jdbcType=INTEGER},
      </if>
      <if test="pusherMask != null" >
        #{pusherMask,jdbcType=INTEGER},
      </if>
      <if test="configJson != null" >
        #{configJson,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        #{disabled,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zty.noteflow.core.facade.DO.examples.PipelineConfigDOExample" resultType="java.lang.Integer" >
    select count(*) from pipeline_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pipeline_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.fileId != null" >
        file_id = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.pipelineType != null" >
        pipeline_type = #{record.pipelineType,jdbcType=INTEGER},
      </if>
      <if test="record.pullerMask != null" >
        puller_mask = #{record.pullerMask,jdbcType=INTEGER},
      </if>
      <if test="record.pusherMask != null" >
        pusher_mask = #{record.pusherMask,jdbcType=INTEGER},
      </if>
      <if test="record.configJson != null" >
        config_json = #{record.configJson,jdbcType=VARCHAR},
      </if>
      <if test="record.disabled != null" >
        disabled = #{record.disabled,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pipeline_config
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      file_id = #{record.fileId,jdbcType=INTEGER},
      pipeline_type = #{record.pipelineType,jdbcType=INTEGER},
      puller_mask = #{record.pullerMask,jdbcType=INTEGER},
      pusher_mask = #{record.pusherMask,jdbcType=INTEGER},
      config_json = #{record.configJson,jdbcType=VARCHAR},
      disabled = #{record.disabled,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zty.noteflow.core.facade.DO.PipelineConfigDO" >
    update pipeline_config
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null" >
        file_id = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="pipelineType != null" >
        pipeline_type = #{pipelineType,jdbcType=INTEGER},
      </if>
      <if test="pullerMask != null" >
        puller_mask = #{pullerMask,jdbcType=INTEGER},
      </if>
      <if test="pusherMask != null" >
        pusher_mask = #{pusherMask,jdbcType=INTEGER},
      </if>
      <if test="configJson != null" >
        config_json = #{configJson,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        disabled = #{disabled,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zty.noteflow.core.facade.DO.PipelineConfigDO" >
    update pipeline_config
    set account_id = #{accountId,jdbcType=INTEGER},
      file_id = #{fileId,jdbcType=INTEGER},
      pipeline_type = #{pipelineType,jdbcType=INTEGER},
      puller_mask = #{pullerMask,jdbcType=INTEGER},
      pusher_mask = #{pusherMask,jdbcType=INTEGER},
      config_json = #{configJson,jdbcType=VARCHAR},
      disabled = #{disabled,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>